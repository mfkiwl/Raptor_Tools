
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.18+10 (git sha1 b6be8bb62, gcc 11.1.0-1ubuntu1~20.04 -fPIC -Os)


-- Executing script file `primitive_example_design_1.ys' --

1. Executing Verilog-2005 frontend: ../../../../../yosys-rs-plugin/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v
Parsing SystemVerilog input from `../../../../../yosys-rs-plugin/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v' to AST representation.
Generating RTLIL representation for module `\BOOT_CLOCK'.
Generating RTLIL representation for module `\CARRY'.
Generating RTLIL representation for module `\CARRY_CHAIN'.
Generating RTLIL representation for module `\CLK_BUF'.
Generating RTLIL representation for module `\DFFNRE'.
Generating RTLIL representation for module `\DFFRE'.
Generating RTLIL representation for module `\DSP19X2'.
Generating RTLIL representation for module `\DSP38'.
Generating RTLIL representation for module `\FIFO18KX2'.
Generating RTLIL representation for module `\FIFO36K'.
Generating RTLIL representation for module `\I_BUF'.
Generating RTLIL representation for module `\I_BUF_DS'.
Generating RTLIL representation for module `\I_DDR'.
Generating RTLIL representation for module `\I_DELAY'.
Generating RTLIL representation for module `\I_SERDES'.
Generating RTLIL representation for module `\LUT1'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\LUT3'.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\LUT5'.
Generating RTLIL representation for module `\LUT6'.
Generating RTLIL representation for module `\O_BUF'.
Generating RTLIL representation for module `\O_BUFT'.
Generating RTLIL representation for module `\O_BUFT_DS'.
Generating RTLIL representation for module `\O_BUF_DS'.
Generating RTLIL representation for module `\O_DDR'.
Generating RTLIL representation for module `\O_DELAY'.
Generating RTLIL representation for module `\O_SERDES'.
Generating RTLIL representation for module `\O_SERDES_CLK'.
Generating RTLIL representation for module `\PLL'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_M'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_S'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M0'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M1'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_DMA'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_IRQ'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_JTAG'.
Generating RTLIL representation for module `\SOC_FPGA_TEMPERATURE'.
Generating RTLIL representation for module `\TDP_RAM18KX2'.
Generating RTLIL representation for module `\TDP_RAM36K'.
Generating RTLIL representation for module `\LATCH'.
Generating RTLIL representation for module `\LATCHN'.
Generating RTLIL representation for module `\LATCHR'.
Generating RTLIL representation for module `\LATCHS'.
Generating RTLIL representation for module `\LATCHNR'.
Generating RTLIL representation for module `\LATCHNS'.
Generating RTLIL representation for module `\RS_DSP'.
Generating RTLIL representation for module `\RS_DSP_MULT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_TDP36K'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: ./rtl/primitive_example_design_1.v
Parsing Verilog input from `./rtl/primitive_example_design_1.v' to AST representation.
Generating RTLIL representation for module `\primitive_example_design_1'.
Warning: wire '\lut_out' is assigned in a block at ./rtl/primitive_example_design_1.v:64.22-64.33.
Warning: wire '\lut_out' is assigned in a block at ./rtl/primitive_example_design_1.v:65.22-65.33.
Warning: wire '\lut_out' is assigned in a block at ./rtl/primitive_example_design_1.v:66.22-66.33.
Warning: wire '\lut_out' is assigned in a block at ./rtl/primitive_example_design_1.v:67.22-67.33.
Warning: wire '\lut_out' is assigned in a block at ./rtl/primitive_example_design_1.v:68.22-68.33.
Warning: wire '\lut_out' is assigned in a block at ./rtl/primitive_example_design_1.v:69.22-69.33.
Warning: wire '\lut_out' is assigned in a block at ./rtl/primitive_example_design_1.v:70.22-70.33.
Warning: wire '\lut_out' is assigned in a block at ./rtl/primitive_example_design_1.v:71.22-71.33.
Warning: wire '\lut_out' is assigned in a block at ./rtl/primitive_example_design_1.v:72.22-72.33.
Generating RTLIL representation for module `\flip_flop'.
Generating RTLIL representation for module `\infer_single_port_ram'.
Successfully finished Verilog frontend.

3. Executing HIERARCHY pass (managing design hierarchy).

3.1. Analyzing design hierarchy..
Top module:  \primitive_example_design_1
Used module:     \infer_single_port_ram
Used module:     \flip_flop

3.2. Analyzing design hierarchy..
Top module:  \primitive_example_design_1
Used module:     \infer_single_port_ram
Used module:     \flip_flop
Removed 0 unused modules.
Warning: Resizing cell port primitive_example_design_1.ram_inst.q from 1 bits to 8 bits.
Warning: Resizing cell port primitive_example_design_1.ram_inst.data from 1 bits to 8 bits.

4. Executing synth_rs pass: v0.4.218

4.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

4.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CARRY.v
Parsing Verilog input from `/nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CARRY.v' to AST representation.
Replacing existing blackbox module `\CARRY' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CARRY.v:10.1-19.10.
Generating RTLIL representation for module `\CARRY'.
Successfully finished Verilog frontend.

4.3. Executing Verilog-2005 frontend: /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v' to AST representation.
Replacing existing blackbox module `\LATCH' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:20.1-34.10.
Generating RTLIL representation for module `\LATCH'.
Replacing existing blackbox module `\LATCHN' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:48.1-62.10.
Generating RTLIL representation for module `\LATCHN'.
Replacing existing blackbox module `\LATCHR' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:81.1-97.10.
Generating RTLIL representation for module `\LATCHR'.
Replacing existing blackbox module `\LATCHS' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:115.1-131.10.
Generating RTLIL representation for module `\LATCHS'.
Replacing existing blackbox module `\LATCHNR' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:150.1-166.10.
Generating RTLIL representation for module `\LATCHNR'.
Replacing existing blackbox module `\LATCHNS' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:184.1-200.10.
Generating RTLIL representation for module `\LATCHNS'.
Generating RTLIL representation for module `\LATCHSRE'.
Generating RTLIL representation for module `\LATCHNSRE'.
Successfully finished Verilog frontend.

4.4. Executing Verilog-2005 frontend: /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFRE.v
Parsing Verilog input from `/nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFRE.v' to AST representation.
Replacing existing blackbox module `\DFFRE' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFRE.v:11.1-25.10.
Generating RTLIL representation for module `\DFFRE'.
Successfully finished Verilog frontend.

4.5. Executing Verilog-2005 frontend: /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFNRE.v
Parsing Verilog input from `/nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFNRE.v' to AST representation.
Replacing existing blackbox module `\DFFNRE' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFNRE.v:11.1-25.10.
Generating RTLIL representation for module `\DFFNRE'.
Successfully finished Verilog frontend.

4.6. Executing Verilog-2005 frontend: /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT1.v
Parsing Verilog input from `/nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT1.v' to AST representation.
Replacing existing blackbox module `\LUT1' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT1.v:10.1-20.10.
Generating RTLIL representation for module `\LUT1'.
Successfully finished Verilog frontend.

4.7. Executing Verilog-2005 frontend: /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT2.v
Parsing Verilog input from `/nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT2.v' to AST representation.
Replacing existing blackbox module `\LUT2' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT2.v:10.1-20.10.
Generating RTLIL representation for module `\LUT2'.
Successfully finished Verilog frontend.

4.8. Executing Verilog-2005 frontend: /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT3.v
Parsing Verilog input from `/nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT3.v' to AST representation.
Replacing existing blackbox module `\LUT3' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT3.v:10.1-20.10.
Generating RTLIL representation for module `\LUT3'.
Successfully finished Verilog frontend.

4.9. Executing Verilog-2005 frontend: /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT4.v
Parsing Verilog input from `/nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT4.v' to AST representation.
Replacing existing blackbox module `\LUT4' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT4.v:11.1-21.10.
Generating RTLIL representation for module `\LUT4'.
Successfully finished Verilog frontend.

4.10. Executing Verilog-2005 frontend: /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT5.v
Parsing Verilog input from `/nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT5.v' to AST representation.
Replacing existing blackbox module `\LUT5' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT5.v:10.1-20.10.
Generating RTLIL representation for module `\LUT5'.
Successfully finished Verilog frontend.

4.11. Executing Verilog-2005 frontend: /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT6.v
Parsing Verilog input from `/nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT6.v' to AST representation.
Replacing existing blackbox module `\LUT6' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT6.v:10.1-20.10.
Generating RTLIL representation for module `\LUT6'.
Successfully finished Verilog frontend.

4.12. Executing Verilog-2005 frontend: /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CLK_BUF.v
Parsing Verilog input from `/nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CLK_BUF.v' to AST representation.
Replacing existing blackbox module `\CLK_BUF' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CLK_BUF.v:10.1-17.10.
Generating RTLIL representation for module `\CLK_BUF'.
Successfully finished Verilog frontend.

4.13. Executing Verilog-2005 frontend: /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/O_BUF.v
Parsing Verilog input from `/nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/O_BUF.v' to AST representation.
Replacing existing blackbox module `\O_BUF' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/O_BUF.v:10.1-22.10.
Generating RTLIL representation for module `\O_BUF'.
Successfully finished Verilog frontend.

4.14. Executing Verilog-2005 frontend: /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DSP38.v
Parsing Verilog input from `/nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DSP38.v' to AST representation.
Replacing existing blackbox module `\DSP38' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DSP38.v:10.1-324.10.
Generating RTLIL representation for module `\DSP38'.
/nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DSP38.v:0: Warning: System task `$display' outside initial block is unsupported.
Successfully finished Verilog frontend.

4.15. Executing Verilog-2005 frontend: /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v
Parsing Verilog input from `/nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v' to AST representation.
Replacing existing blackbox module `\TDP_RAM36K' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v:2.1-29.10.
Generating RTLIL representation for module `\TDP_RAM36K'.
Replacing existing blackbox module `\TDP_RAM18KX2' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v:33.1-84.10.
Generating RTLIL representation for module `\TDP_RAM18KX2'.
Generating RTLIL representation for module `\RS_DSP3'.
Replacing existing blackbox module `\DSP19X2' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v:116.1-149.10.
Generating RTLIL representation for module `\DSP19X2'.
Successfully finished Verilog frontend.

4.16. Executing Verilog-2005 frontend: /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v' to AST representation.
Generating RTLIL representation for module `\TDP_BRAM18'.
Replacing existing blackbox module `\BRAM2x18_TDP' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v:112.1-540.10.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Replacing existing blackbox module `\BRAM2x18_SDP' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v:542.1-951.10.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Replacing existing blackbox module `\_$_mem_v2_asymmetric' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v:953.1-1356.10.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

4.17. Executing HIERARCHY pass (managing design hierarchy).

4.17.1. Analyzing design hierarchy..
Top module:  \primitive_example_design_1
Used module:     \infer_single_port_ram
Used module:     \flip_flop

4.17.2. Analyzing design hierarchy..
Top module:  \primitive_example_design_1
Used module:     \infer_single_port_ram
Used module:     \flip_flop
Removed 0 unused modules.

4.18. Executing PROC pass (convert processes to netlists).

4.18.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.18.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$./rtl/primitive_example_design_1.v:103$7 in module infer_single_port_ram.
Marked 1 switch rules as full_case in process $proc$./rtl/primitive_example_design_1.v:82$5 in module flip_flop.
Removed 1 dead cases from process $proc$./rtl/primitive_example_design_1.v:62$4 in module primitive_example_design_1.
Marked 1 switch rules as full_case in process $proc$./rtl/primitive_example_design_1.v:62$4 in module primitive_example_design_1.
Removed a total of 1 dead cases.

4.18.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 1 redundant assignment.
Promoted 5 assignments to connections.

4.18.4. Executing PROC_INIT pass (extract init attributes).

4.18.5. Executing PROC_ARST pass (detect async resets in processes).

4.18.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 1 switch.
<suppressed ~2 debug messages>

4.18.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\infer_single_port_ram.$proc$./rtl/primitive_example_design_1.v:103$7'.
     1/3: $1$memwr$\ram$./rtl/primitive_example_design_1.v:106$6_EN[7:0]$13
     2/3: $1$memwr$\ram$./rtl/primitive_example_design_1.v:106$6_DATA[7:0]$12
     3/3: $1$memwr$\ram$./rtl/primitive_example_design_1.v:106$6_ADDR[5:0]$11
Creating decoders for process `\flip_flop.$proc$./rtl/primitive_example_design_1.v:82$5'.
     1/1: $0\Q[0:0]
Creating decoders for process `\primitive_example_design_1.$proc$./rtl/primitive_example_design_1.v:62$4'.
     1/1: $1\lut_out[0:0]

4.18.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\primitive_example_design_1.\lut_out' from process `\primitive_example_design_1.$proc$./rtl/primitive_example_design_1.v:62$4'.

4.18.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\infer_single_port_ram.\addr_reg' using process `\infer_single_port_ram.$proc$./rtl/primitive_example_design_1.v:103$7'.
  created $dff cell `$procdff$33' with positive edge clock.
Creating register for signal `\infer_single_port_ram.$memwr$\ram$./rtl/primitive_example_design_1.v:106$6_ADDR' using process `\infer_single_port_ram.$proc$./rtl/primitive_example_design_1.v:103$7'.
  created $dff cell `$procdff$34' with positive edge clock.
Creating register for signal `\infer_single_port_ram.$memwr$\ram$./rtl/primitive_example_design_1.v:106$6_DATA' using process `\infer_single_port_ram.$proc$./rtl/primitive_example_design_1.v:103$7'.
  created $dff cell `$procdff$35' with positive edge clock.
Creating register for signal `\infer_single_port_ram.$memwr$\ram$./rtl/primitive_example_design_1.v:106$6_EN' using process `\infer_single_port_ram.$proc$./rtl/primitive_example_design_1.v:103$7'.
  created $dff cell `$procdff$36' with positive edge clock.
Creating register for signal `\flip_flop.\Q' using process `\flip_flop.$proc$./rtl/primitive_example_design_1.v:82$5'.
  created $dff cell `$procdff$37' with positive edge clock.

4.18.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

4.18.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\infer_single_port_ram.$proc$./rtl/primitive_example_design_1.v:103$7'.
Removing empty process `infer_single_port_ram.$proc$./rtl/primitive_example_design_1.v:103$7'.
Found and cleaned up 1 empty switch in `\flip_flop.$proc$./rtl/primitive_example_design_1.v:82$5'.
Removing empty process `flip_flop.$proc$./rtl/primitive_example_design_1.v:82$5'.
Found and cleaned up 1 empty switch in `\primitive_example_design_1.$proc$./rtl/primitive_example_design_1.v:62$4'.
Removing empty process `primitive_example_design_1.$proc$./rtl/primitive_example_design_1.v:62$4'.
Cleaned up 3 empty switches.

4.18.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module infer_single_port_ram.
Optimizing module flip_flop.
Optimizing module primitive_example_design_1.

4.19. Executing DEMUXMAP pass.

4.20. Executing FLATTEN pass (flatten design).
Deleting now unused module flip_flop.
Deleting now unused module infer_single_port_ram.
<suppressed ~2 debug messages>

4.21. Executing DEMUXMAP pass.

4.22. Executing TRIBUF pass.

4.23. Executing TRIBUF pass.

4.24. Executing DEMINOUT pass (demote inout ports to input or output).

4.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.26. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..
Removed 3 unused cells and 23 unused wires.
<suppressed ~5 debug messages>

4.27. Executing CHECK pass (checking for obvious problems).
Checking module primitive_example_design_1...
Found and reported 0 problems.

4.28. Printing statistics.

=== primitive_example_design_1 ===

   Number of wires:                 63
   Number of wire bits:            120
   Number of public wires:          58
   Number of public wire bits:      96
   Number of memories:               2
   Number of memory bits:          520
   Number of processes:              0
   Number of cells:                 35
     $dff                            2
     $logic_not                      1
     $meminit                        1
     $memrd_v2                       2
     $memwr_v2                       1
     $mux                            6
     CARRY_CHAIN                     1
     DFFNRE                          1
     DFFRE                           1
     I_BUF                          17
     O_BUF                           1
     O_BUFT                          1

4.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.30. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

4.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
    Consolidated identical input bits for $mux cell $flatten\ram_inst.$procmux$21:
      Old ports: A=8'00000000, B=8'11111111, Y=$flatten\ram_inst.$0$memwr$\ram$./rtl/primitive_example_design_1.v:106$6_EN[7:0]$10
      New ports: A=1'0, B=1'1, Y=$flatten\ram_inst.$0$memwr$\ram$./rtl/primitive_example_design_1.v:106$6_EN[7:0]$10 [0]
      New connections: $flatten\ram_inst.$0$memwr$\ram$./rtl/primitive_example_design_1.v:106$6_EN[7:0]$10 [7:1] = { $flatten\ram_inst.$0$memwr$\ram$./rtl/primitive_example_design_1.v:106$6_EN[7:0]$10 [0] $flatten\ram_inst.$0$memwr$\ram$./rtl/primitive_example_design_1.v:106$6_EN[7:0]$10 [0] $flatten\ram_inst.$0$memwr$\ram$./rtl/primitive_example_design_1.v:106$6_EN[7:0]$10 [0] $flatten\ram_inst.$0$memwr$\ram$./rtl/primitive_example_design_1.v:106$6_EN[7:0]$10 [0] $flatten\ram_inst.$0$memwr$\ram$./rtl/primitive_example_design_1.v:106$6_EN[7:0]$10 [0] $flatten\ram_inst.$0$memwr$\ram$./rtl/primitive_example_design_1.v:106$6_EN[7:0]$10 [0] $flatten\ram_inst.$0$memwr$\ram$./rtl/primitive_example_design_1.v:106$6_EN[7:0]$10 [0] }
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 1 changes.

4.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.34. Executing OPT_SHARE pass.

4.35. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=2, #solve=0, #remove=0, time=0.00 sec.]

4.36. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..

4.37. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

RUN-OPT ITERATIONS DONE : 1

4.38. Executing FSM pass (extract and optimize FSM).

4.38.1. Executing FSM_DETECT pass (finding FSMs in design).

4.38.2. Executing FSM_EXTRACT pass (extracting FSM from design).

4.38.3. Executing FSM_OPT pass (simple optimizations of FSMs).

4.38.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..

4.38.5. Executing FSM_OPT pass (simple optimizations of FSMs).

4.38.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

4.38.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

4.38.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

4.39. Executing WREDUCE pass (reducing word size of cells).
Removed top 29 address bits (of 32) from memory init port primitive_example_design_1.$auto$mem.cc:319:emit$19 ($auto$proc_rom.cc:150:do_switch$17).

4.40. Executing PEEPOPT pass (run peephole optimizers).

4.41. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..

4.42. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.43. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.44. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

4.45. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.46. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.47. Executing OPT_SHARE pass.

4.48. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\ff_inst1.$procdff$37 ($dff) from module primitive_example_design_1 (D = \ff_inst1.D, Q = \ff_inst1.Q, rval = 1'0).
[#visit=2, #solve=0, #remove=0, time=0.00 sec.]

4.49. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..
Removed 1 unused cells and 1 unused wires.
<suppressed ~2 debug messages>

4.50. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.51. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

4.52. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.53. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.54. Executing OPT_SHARE pass.

4.55. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=2, #solve=0, #remove=0, time=0.00 sec.]

4.56. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..

4.57. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

RUN-OPT ITERATIONS DONE : 2

4.58. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.59. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.60. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

4.61. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.62. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.63. Executing OPT_SHARE pass.

4.64. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=2, #solve=0, #remove=0, time=0.00 sec.]

4.65. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..

4.66. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

RUN-OPT ITERATIONS DONE : 1

4.67. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.68. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.69. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

4.70. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.71. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.72. Executing OPT_SHARE pass.

4.73. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=2, #solve=0, #remove=0, time=0.00 sec.]

4.74. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=2, #solve=1, #remove=0, time=0.00 sec.]

4.75. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..

4.76. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

RUN-OPT ITERATIONS DONE : 1

4.77. Executing WREDUCE pass (reducing word size of cells).

4.78. Executing PEEPOPT pass (run peephole optimizers).

4.79. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..

4.80. Executing DEMUXMAP pass.

4.81. Printing statistics.

=== primitive_example_design_1 ===

   Number of wires:                 62
   Number of wire bits:            119
   Number of public wires:          58
   Number of public wire bits:      96
   Number of memories:               2
   Number of memory bits:          520
   Number of processes:              0
   Number of cells:                 34
     $dff                            1
     $logic_not                      1
     $meminit                        1
     $memrd_v2                       2
     $memwr_v2                       1
     $mux                            5
     $sdff                           1
     CARRY_CHAIN                     1
     DFFNRE                          1
     DFFRE                           1
     I_BUF                          17
     O_BUF                           1
     O_BUFT                          1

4.82. Executing RS_DSP_MULTADD pass.

4.83. Executing WREDUCE pass (reducing word size of cells).

4.84. Executing RS_DSP_MACC pass.

4.85. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..

4.86. Executing TECHMAP pass (map to technology primitives).

4.86.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

4.86.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.87. Printing statistics.

=== primitive_example_design_1 ===

   Number of wires:                 62
   Number of wire bits:            119
   Number of public wires:          58
   Number of public wire bits:      96
   Number of memories:               2
   Number of memory bits:          520
   Number of processes:              0
   Number of cells:                 34
     $dff                            1
     $logic_not                      1
     $meminit                        1
     $memrd_v2                       2
     $memwr_v2                       1
     $mux                            5
     $sdff                           1
     CARRY_CHAIN                     1
     DFFNRE                          1
     DFFRE                           1
     I_BUF                          17
     O_BUF                           1
     O_BUFT                          1

4.88. Executing TECHMAP pass (map to technology primitives).

4.88.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/dsp_map.v
Parsing Verilog input from `/nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__RS_MUL20X18'.
Generating RTLIL representation for module `\$__RS_MUL10X9'.
Successfully finished Verilog frontend.

4.88.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.89. Executing TECHMAP pass (map to technology primitives).

4.89.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/dsp_final_map.v
Parsing Verilog input from `/nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/dsp_final_map.v' to AST representation.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Successfully finished Verilog frontend.

4.89.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.90. Executing rs_pack_dsp_regs pass.

4.91. Executing RS_DSP_IO_REGS pass.

4.92. Printing statistics.

=== primitive_example_design_1 ===

   Number of wires:                 62
   Number of wire bits:            119
   Number of public wires:          58
   Number of public wire bits:      96
   Number of memories:               2
   Number of memory bits:          520
   Number of processes:              0
   Number of cells:                 34
     $dff                            1
     $logic_not                      1
     $meminit                        1
     $memrd_v2                       2
     $memwr_v2                       1
     $mux                            5
     $sdff                           1
     CARRY_CHAIN                     1
     DFFNRE                          1
     DFFRE                           1
     I_BUF                          17
     O_BUF                           1
     O_BUFT                          1

4.93. Executing TECHMAP pass (map to technology primitives).

4.93.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/dsp38_map.v
Parsing Verilog input from `/nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/dsp38_map.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP_MULTACC'.
Generating RTLIL representation for module `\RS_DSP_MULT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN_REGOUT'.
Successfully finished Verilog frontend.

4.93.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~14 debug messages>

4.94. Printing statistics.

=== primitive_example_design_1 ===

   Number of wires:                 62
   Number of wire bits:            119
   Number of public wires:          58
   Number of public wire bits:      96
   Number of memories:               2
   Number of memory bits:          520
   Number of processes:              0
   Number of cells:                 34
     $dff                            1
     $logic_not                      1
     $meminit                        1
     $memrd_v2                       2
     $memwr_v2                       1
     $mux                            5
     $sdff                           1
     CARRY_CHAIN                     1
     DFFNRE                          1
     DFFRE                           1
     I_BUF                          17
     O_BUF                           1
     O_BUFT                          1

4.95. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module primitive_example_design_1:
  created 0 $alu and 0 $macc cells.

4.96. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.97. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.98. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

4.99. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.100. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.101. Executing OPT_SHARE pass.

4.102. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=2, #solve=0, #remove=0, time=0.00 sec.]

4.103. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..

4.104. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

RUN-OPT ITERATIONS DONE : 1

4.105. Printing statistics.

=== primitive_example_design_1 ===

   Number of wires:                 62
   Number of wire bits:            119
   Number of public wires:          58
   Number of public wire bits:      96
   Number of memories:               2
   Number of memory bits:          520
   Number of processes:              0
   Number of cells:                 34
     $dff                            1
     $logic_not                      1
     $meminit                        1
     $memrd_v2                       2
     $memwr_v2                       1
     $mux                            5
     $sdff                           1
     CARRY_CHAIN                     1
     DFFNRE                          1
     DFFRE                           1
     I_BUF                          17
     O_BUF                           1
     O_BUFT                          1

4.106. Executing MEMORY pass.

4.106.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

4.106.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

4.106.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing primitive_example_design_1.ram_inst.ram write port 0.

4.106.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

4.106.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `$auto$proc_rom.cc:150:do_switch$17'[0] in module `\primitive_example_design_1': no output FF found.
Checking read port `\ram_inst.ram'[0] in module `\primitive_example_design_1': no output FF found.
Checking read port address `$auto$proc_rom.cc:150:do_switch$17'[0] in module `\primitive_example_design_1': no address FF found.
Checking read port address `\ram_inst.ram'[0] in module `\primitive_example_design_1': merged address FF to cell.
<suppressed ~2 debug messages>

4.106.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..
Removed 1 unused cells and 3 unused wires.
<suppressed ~3 debug messages>

4.106.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

4.106.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

4.106.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..

4.106.10. Executing MEMORY_COLLECT pass (generating $mem cells).

4.107. Printing statistics.

=== primitive_example_design_1 ===

   Number of wires:                 64
   Number of wire bits:            130
   Number of public wires:          57
   Number of public wire bits:      90
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 34
     $dff                            2
     $logic_not                      1
     $mem_v2                         2
     $mux                            6
     $sdff                           1
     CARRY_CHAIN                     1
     DFFNRE                          1
     DFFRE                           1
     I_BUF                          17
     O_BUF                           1
     O_BUFT                          1

4.108. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~6 debug messages>

4.109. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..

4.110. Executing MEMORY_LIBMAP pass (mapping memories to cells).

4.111. Executing MEMORY_LIBMAP pass (mapping memories to cells).
using FF mapping for memory primitive_example_design_1.$auto$proc_rom.cc:150:do_switch$17
mapping memory primitive_example_design_1.ram_inst.ram via $__RS_FACTOR_BRAM18_SDP
<suppressed ~177 debug messages>

4.112. Executing Rs_BRAM_Split pass.

4.113. Executing TECHMAP pass (map to technology primitives).

4.113.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/brams_map_new_version.v
Parsing Verilog input from `/nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/brams_map_new_version.v' to AST representation.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_SDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_SDP'.
Successfully finished Verilog frontend.

4.113.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~30 debug messages>

4.114. Executing TECHMAP pass (map to technology primitives).

4.114.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/brams_final_map_new_version.v
Parsing Verilog input from `/nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/brams_final_map_new_version.v' to AST representation.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Successfully finished Verilog frontend.

4.114.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~32 debug messages>

4.115. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

4.116. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.
<suppressed ~1 debug messages>

4.117. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.118. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\ram_inst.$procmux$27.
    dead port 2/2 on $mux $flatten\ram_inst.$procmux$27.
Removed 2 multiplexer ports.
<suppressed ~6 debug messages>

4.119. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.120. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.121. Executing OPT_SHARE pass.

4.122. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=3, #solve=0, #remove=0, time=0.00 sec.]

4.123. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..
Removed 0 unused cells and 54 unused wires.
<suppressed ~1 debug messages>

4.124. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.125. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

4.126. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.127. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.128. Executing OPT_SHARE pass.

4.129. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=3, #solve=0, #remove=0, time=0.00 sec.]

4.130. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..

4.131. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

RUN-OPT ITERATIONS DONE : 2

4.132. Executing PMUXTREE pass.

4.133. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~6 debug messages>

4.134. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory $auto$proc_rom.cc:150:do_switch$17 in module \primitive_example_design_1:
  created 8 $dff cells and 0 static cells of width 1.
  read interface: 0 $dff and 7 $mux cells.
  write interface: 0 write mux blocks.

4.135. Executing TECHMAP pass (map to technology primitives).

4.135.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.135.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/arith_map.v
Parsing Verilog input from `/nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

4.135.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $dff.
No more expansions possible.
<suppressed ~96 debug messages>

4.136. Printing statistics.

=== primitive_example_design_1 ===

   Number of wires:                110
   Number of wire bits:            291
   Number of public wires:          57
   Number of public wire bits:      90
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 69
     $_DFF_P_                       18
     $_MUX_                         27
     $_NOT_                          1
     CARRY_CHAIN                     1
     DFFNRE                          1
     DFFRE                           1
     I_BUF                          17
     O_BUF                           1
     O_BUFT                          1
     TDP_RAM18KX2                    1

4.137. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.
<suppressed ~1 debug messages>

4.138. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
<suppressed ~36 debug messages>
Removed a total of 12 cells.

4.139. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.140. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.141. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.142. Executing OPT_SHARE pass.

4.143. Executing OPT_DFF pass (perform DFF optimizations).
Handling const CLK on primitive_example_design_1:$auto$proc_rom.cc:150:do_switch$17[0]_241 ($_DFF_P_) from module primitive_example_design_1 (removing D path).
Handling const CLK on primitive_example_design_1:$auto$proc_rom.cc:150:do_switch$17[1]_240 ($_DFF_P_) from module primitive_example_design_1 (removing D path).
Handling const CLK on primitive_example_design_1:$auto$proc_rom.cc:150:do_switch$17[2]_239 ($_DFF_P_) from module primitive_example_design_1 (removing D path).
Handling const CLK on primitive_example_design_1:$auto$proc_rom.cc:150:do_switch$17[3]_238 ($_DFF_P_) from module primitive_example_design_1 (removing D path).
Handling const CLK on primitive_example_design_1:$auto$proc_rom.cc:150:do_switch$17[4]_237 ($_DFF_P_) from module primitive_example_design_1 (removing D path).
Handling const CLK on primitive_example_design_1:$auto$proc_rom.cc:150:do_switch$17[5]_236 ($_DFF_P_) from module primitive_example_design_1 (removing D path).
Handling const CLK on primitive_example_design_1:$auto$proc_rom.cc:150:do_switch$17[6]_235 ($_DFF_P_) from module primitive_example_design_1 (removing D path).
Handling const CLK on primitive_example_design_1:$auto$proc_rom.cc:150:do_switch$17[7]_234 ($_DFF_P_) from module primitive_example_design_1 (removing D path).
[#visit=4, #solve=0, #remove=0, time=0.00 sec.]

4.144. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..
Removed 8 unused cells and 25 unused wires.
<suppressed ~9 debug messages>

4.145. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.
<suppressed ~2 debug messages>

4.146. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.147. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.148. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

4.149. Executing OPT_SHARE pass.

4.150. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=3, #solve=0, #remove=0, time=0.00 sec.]

4.151. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

4.152. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.153. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.154. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.155. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.156. Executing OPT_SHARE pass.

4.157. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=3, #solve=0, #remove=0, time=0.00 sec.]

4.158. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..

4.159. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

RUN-OPT ITERATIONS DONE : 3

4.160. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.
<suppressed ~29 debug messages>

4.161. Executing TECHMAP pass (map to technology primitives).

4.161.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.161.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

4.162. Printing statistics.

=== primitive_example_design_1 ===

   Number of wires:                 82
   Number of wire bits:            263
   Number of public wires:          57
   Number of public wire bits:      90
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 35
     $_DFF_P_                        3
     $_MUX_                          7
     $_NOT_                          2
     CARRY_CHAIN                     1
     DFFNRE                          1
     DFFRE                           1
     I_BUF                          17
     O_BUF                           1
     O_BUFT                          1
     TDP_RAM18KX2                    1

4.163. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.164. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.165. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.166. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.167. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.168. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=3, #solve=0, #remove=0, time=0.00 sec.]

4.169. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..
Removed 0 unused cells and 11 unused wires.
<suppressed ~1 debug messages>

4.170. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

RUN-OPT ITERATIONS DONE : 1

4.171. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.172. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.173. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.174. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.175. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.176. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=3, #solve=0, #remove=0, time=0.00 sec.]

4.177. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..

4.178. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

RUN-OPT ITERATIONS DONE : 1

4.179. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.180. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.181. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.182. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.183. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.184. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=3, #solve=0, #remove=0, time=0.00 sec.]

4.185. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=3, #solve=0, #remove=0, time=0.00 sec.]

4.186. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..

4.187. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

RUN-OPT ITERATIONS DONE : 1

4.188. Printing statistics.

=== primitive_example_design_1 ===

   Number of wires:                 71
   Number of wire bits:            194
   Number of public wires:          57
   Number of public wire bits:      90
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 35
     $_DFF_P_                        3
     $_MUX_                          7
     $_NOT_                          2
     CARRY_CHAIN                     1
     DFFNRE                          1
     DFFRE                           1
     I_BUF                          17
     O_BUF                           1
     O_BUFT                          1
     TDP_RAM18KX2                    1

   Number of Generic REGs:          3

ABC-DFF iteration : 1

4.189. Executing ABC pass (technology mapping using ABC).

4.189.1. Summary of detected clock domains:
  35 cells in clk=\clk, en={ }, arst={ }, srst={ }

  #logic partitions = 1

4.189.2. Extracting gate netlist of module `\primitive_example_design_1' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 12 gates and 26 wires to a netlist network with 12 inputs and 7 outputs (dfl=1).

4.189.2.1. Executing ABC.
[Time = 0.11 sec.]

4.190. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.191. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.192. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.193. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.194. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.195. Executing OPT_SHARE pass.

4.196. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=3, #solve=0, #remove=0, time=0.00 sec.]

4.197. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..
Removed 0 unused cells and 28 unused wires.
<suppressed ~1 debug messages>

4.198. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

RUN-OPT ITERATIONS DONE : 1

ABC-DFF iteration : 2

4.199. Executing ABC pass (technology mapping using ABC).

4.199.1. Summary of detected clock domains:
  34 cells in clk=\clk, en={ }, arst={ }, srst={ }

  #logic partitions = 1

4.199.2. Extracting gate netlist of module `\primitive_example_design_1' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 11 gates and 23 wires to a netlist network with 12 inputs and 7 outputs (dfl=1).

4.199.2.1. Executing ABC.
[Time = 0.11 sec.]

4.200. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.201. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.202. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.203. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.204. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.205. Executing OPT_SHARE pass.

4.206. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=3, #solve=0, #remove=0, time=0.00 sec.]

4.207. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..
Removed 0 unused cells and 28 unused wires.
<suppressed ~1 debug messages>

4.208. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

RUN-OPT ITERATIONS DONE : 1

ABC-DFF iteration : 3

4.209. Executing ABC pass (technology mapping using ABC).

4.209.1. Summary of detected clock domains:
  34 cells in clk=\clk, en={ }, arst={ }, srst={ }

  #logic partitions = 1

4.209.2. Extracting gate netlist of module `\primitive_example_design_1' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 11 gates and 23 wires to a netlist network with 12 inputs and 7 outputs (dfl=2).

4.209.2.1. Executing ABC.
[Time = 0.11 sec.]

4.210. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.211. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.212. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.213. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.214. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.215. Executing OPT_SHARE pass.

4.216. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=3, #solve=0, #remove=0, time=0.00 sec.]

4.217. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..
Removed 0 unused cells and 28 unused wires.
<suppressed ~1 debug messages>

4.218. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

RUN-OPT ITERATIONS DONE : 1

ABC-DFF iteration : 4

4.219. Executing ABC pass (technology mapping using ABC).

4.219.1. Summary of detected clock domains:
  33 cells in clk=\clk, en={ }, arst={ }, srst={ }

  #logic partitions = 1

4.219.2. Extracting gate netlist of module `\primitive_example_design_1' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 10 gates and 22 wires to a netlist network with 12 inputs and 7 outputs (dfl=2).

4.219.2.1. Executing ABC.
[Time = 0.14 sec.]

4.220. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.221. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.222. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.223. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.224. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.225. Executing OPT_SHARE pass.

4.226. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=3, #solve=0, #remove=0, time=0.00 sec.]

4.227. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..
Removed 0 unused cells and 27 unused wires.
<suppressed ~1 debug messages>

4.228. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

RUN-OPT ITERATIONS DONE : 1
select with DFL2 synthesis (thresh-logic=0.920000, thresh_dff=0.980000)

4.229. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

4.230. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.231. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.232. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.233. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.234. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.235. Executing OPT_SHARE pass.

4.236. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=3, #solve=0, #remove=0, time=0.00 sec.]

4.237. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..

4.238. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

RUN-OPT ITERATIONS DONE : 1

4.239. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.240. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.241. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.242. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.243. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.244. Executing OPT_SHARE pass.

4.245. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=3, #solve=0, #remove=0, time=0.00 sec.]

4.246. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..

4.247. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

RUN-OPT ITERATIONS DONE : 1

4.248. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.249. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.250. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.251. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.252. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.253. Executing OPT_SHARE pass.

4.254. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=3, #solve=0, #remove=0, time=0.00 sec.]

4.255. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=3, #solve=0, #remove=0, time=0.00 sec.]

4.256. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..

4.257. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

RUN-OPT ITERATIONS DONE : 1

4.258. Executing BMUXMAP pass.

4.259. Executing DEMUXMAP pass.

4.260. Executing ABC pass (technology mapping using ABC).

4.260.1. Extracting gate netlist of module `\primitive_example_design_1' to `<abc-temp-dir>/input.blif'..
Extracted 7 gates and 19 wires to a netlist network with 12 inputs and 5 outputs (dfl=1).

4.260.1.1. Executing ABC.
DE:   #PIs =  12  #Luts =     5  Max Lvl =   1  Avg Lvl =   1.00  [   0.25 sec. at Pass 0]{firstMap}[1]
DE:   #PIs =  12  #Luts =     5  Max Lvl =   1  Avg Lvl =   1.00  [   0.24 sec. at Pass 1]{initMapFlow}[3]
[Time = 2.68 sec.]

4.261. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.262. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.263. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.264. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.265. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.266. Executing OPT_SHARE pass.

4.267. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=3, #solve=0, #remove=0, time=0.00 sec.]

4.268. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..
Removed 0 unused cells and 19 unused wires.
<suppressed ~1 debug messages>

4.269. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

RUN-OPT ITERATIONS DONE : 1

4.270. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

4.271. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.272. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.273. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.274. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.275. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.276. Executing OPT_SHARE pass.

4.277. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=3, #solve=0, #remove=0, time=0.00 sec.]

4.278. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..

4.279. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

RUN-OPT ITERATIONS DONE : 1

4.280. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.281. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.282. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.283. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.284. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.285. Executing OPT_SHARE pass.

4.286. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=3, #solve=0, #remove=0, time=0.00 sec.]

4.287. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=3, #solve=0, #remove=0, time=0.00 sec.]

4.288. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..

4.289. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

RUN-OPT ITERATIONS DONE : 1

4.290. Printing statistics.

=== primitive_example_design_1 ===

   Number of wires:                 68
   Number of wire bits:            191
   Number of public wires:          57
   Number of public wire bits:      90
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 31
     $_DFF_P_                        3
     $lut                            5
     CARRY_CHAIN                     1
     DFFNRE                          1
     DFFRE                           1
     I_BUF                          17
     O_BUF                           1
     O_BUFT                          1
     TDP_RAM18KX2                    1

4.291. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

4.292. Executing RS_DFFSR_CONV pass.

4.293. Printing statistics.

=== primitive_example_design_1 ===

   Number of wires:                 68
   Number of wire bits:            191
   Number of public wires:          57
   Number of public wire bits:      90
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 31
     $_DFF_P_                        3
     $lut                            5
     CARRY_CHAIN                     1
     DFFNRE                          1
     DFFRE                           1
     I_BUF                          17
     O_BUF                           1
     O_BUFT                          1
     TDP_RAM18KX2                    1

4.294. Executing TECHMAP pass (map to technology primitives).

4.294.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.294.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v
Parsing Verilog input from `/nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_PP0_'.
Generating RTLIL representation for module `\$_DLATCH_PN0_'.
Generating RTLIL representation for module `\$_DLATCH_NP0_'.
Generating RTLIL representation for module `\$_DLATCH_NN0_'.
Generating RTLIL representation for module `\$_DLATCH_PP1_'.
Generating RTLIL representation for module `\$_DLATCH_PN1_'.
Generating RTLIL representation for module `\$_DLATCH_NP1_'.
Generating RTLIL representation for module `\$_DLATCH_NN1_'.
Successfully finished Verilog frontend.

4.294.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
No more expansions possible.
<suppressed ~128 debug messages>

4.295. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.
<suppressed ~18 debug messages>

4.296. Executing SIMPLEMAP pass (map simple cells to gate primitives).

4.297. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.298. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.299. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

4.300. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..
Removed 0 unused cells and 19 unused wires.
<suppressed ~1 debug messages>

4.301. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.302. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.303. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.304. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.305. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.306. Executing OPT_SHARE pass.

4.307. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

4.308. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..

4.309. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

RUN-OPT ITERATIONS DONE : 1

4.310. Executing TECHMAP pass (map to technology primitives).

4.310.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.310.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

4.311. Executing ABC pass (technology mapping using ABC).

4.311.1. Extracting gate netlist of module `\primitive_example_design_1' to `<abc-temp-dir>/input.blif'..
Extracted 9 gates and 23 wires to a netlist network with 12 inputs and 5 outputs (dfl=1).

4.311.1.1. Executing ABC.
DE:   #PIs =  12  #Luts =     5  Max Lvl =   1  Avg Lvl =   1.00  [   0.17 sec. at Pass 0]{firstMap}[1]
DE:   #PIs =  12  #Luts =     5  Max Lvl =   1  Avg Lvl =   1.00  [   0.23 sec. at Pass 1]{initMapFlow}[3]
[Time = 2.58 sec.]

4.312. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

4.313. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.314. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \primitive_example_design_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.315. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \primitive_example_design_1.
Performed a total of 0 changes.

4.316. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\primitive_example_design_1'.
Removed a total of 0 cells.

4.317. Executing OPT_SHARE pass.

4.318. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

4.319. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..
Removed 0 unused cells and 20 unused wires.
<suppressed ~1 debug messages>

4.320. Executing OPT_EXPR pass (perform const folding).
Optimizing module primitive_example_design_1.

RUN-OPT ITERATIONS DONE : 1

4.321. Executing HIERARCHY pass (managing design hierarchy).

4.321.1. Analyzing design hierarchy..
Top module:  \primitive_example_design_1

4.321.2. Analyzing design hierarchy..
Top module:  \primitive_example_design_1
Removed 0 unused modules.
Warning: Resizing cell port primitive_example_design_1.ram_inst.ram.0.0.ADDR_A1 from 15 bits to 14 bits.
Warning: Resizing cell port primitive_example_design_1.ram_inst.ram.0.0.ADDR_B1 from 15 bits to 14 bits.
Warning: Resizing cell port primitive_example_design_1.ram_inst.ram.0.0.BE_B1 from 1 bits to 2 bits.

4.322. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \primitive_example_design_1..
Removed 0 unused cells and 9 unused wires.
<suppressed ~9 debug messages>

4.323. Executing Verilog-2005 frontend: /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/io_cells_map1.v
Parsing SystemVerilog input from `/nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/io_cells_map1.v' to AST representation.
Generating RTLIL representation for module `\rs__CLK_BUF'.
Generating RTLIL representation for module `\rs__I_BUF'.
Generating RTLIL representation for module `\rs__O_BUF'.
Generating RTLIL representation for module `\rs__IO_BUF'.
Generating RTLIL representation for module `\rs__O_BUFT'.
Successfully finished Verilog frontend.

4.324. Executing Verilog-2005 frontend: /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v
Parsing SystemVerilog input from `/nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v' to AST representation.
Replacing existing blackbox module `\BOOT_CLOCK' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:9.1-14.10.
Generating RTLIL representation for module `\BOOT_CLOCK'.
Replacing existing blackbox module `\CARRY' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:24.1-31.10.
Generating RTLIL representation for module `\CARRY'.
Replacing existing blackbox module `\CARRY_CHAIN' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:41.1-48.10.
Generating RTLIL representation for module `\CARRY_CHAIN'.
Replacing existing blackbox module `\CLK_BUF' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:58.1-63.10.
Generating RTLIL representation for module `\CLK_BUF'.
Replacing existing blackbox module `\DFFNRE' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:73.1-81.10.
Generating RTLIL representation for module `\DFFNRE'.
Replacing existing blackbox module `\DFFRE' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:91.1-99.10.
Generating RTLIL representation for module `\DFFRE'.
Replacing existing blackbox module `\DSP19X2' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:109.1-143.10.
Generating RTLIL representation for module `\DSP19X2'.
Replacing existing blackbox module `\DSP38' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:153.1-179.10.
Generating RTLIL representation for module `\DSP38'.
Replacing existing blackbox module `\FIFO18KX2' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:189.1-236.10.
Generating RTLIL representation for module `\FIFO18KX2'.
Replacing existing blackbox module `\FIFO36K' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:246.1-271.10.
Generating RTLIL representation for module `\FIFO36K'.
Replacing existing blackbox module `\I_BUF' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:281.1-291.10.
Generating RTLIL representation for module `\I_BUF'.
Replacing existing blackbox module `\I_BUF_DS' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:301.1-313.10.
Generating RTLIL representation for module `\I_BUF_DS'.
Replacing existing blackbox module `\I_DDR' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:323.1-330.10.
Generating RTLIL representation for module `\I_DDR'.
Replacing existing blackbox module `\I_DELAY' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:340.1-351.10.
Generating RTLIL representation for module `\I_DELAY'.
Replacing existing blackbox module `\I_SERDES' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:361.1-380.10.
Generating RTLIL representation for module `\I_SERDES'.
Replacing existing blackbox module `\LUT1' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:390.1-396.10.
Generating RTLIL representation for module `\LUT1'.
Replacing existing blackbox module `\LUT2' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:406.1-412.10.
Generating RTLIL representation for module `\LUT2'.
Replacing existing blackbox module `\LUT3' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:422.1-428.10.
Generating RTLIL representation for module `\LUT3'.
Replacing existing blackbox module `\LUT4' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:438.1-444.10.
Generating RTLIL representation for module `\LUT4'.
Replacing existing blackbox module `\LUT5' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:454.1-460.10.
Generating RTLIL representation for module `\LUT5'.
Replacing existing blackbox module `\LUT6' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:470.1-476.10.
Generating RTLIL representation for module `\LUT6'.
Replacing existing blackbox module `\O_BUF' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:486.1-498.10.
Generating RTLIL representation for module `\O_BUF'.
Replacing existing blackbox module `\O_BUFT' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:508.1-520.10.
Generating RTLIL representation for module `\O_BUFT'.
Replacing existing blackbox module `\O_BUFT_DS' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:530.1-542.10.
Generating RTLIL representation for module `\O_BUFT_DS'.
Replacing existing blackbox module `\O_BUF_DS' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:552.1-564.10.
Generating RTLIL representation for module `\O_BUF_DS'.
Replacing existing blackbox module `\O_DDR' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:574.1-581.10.
Generating RTLIL representation for module `\O_DDR'.
Replacing existing blackbox module `\O_DELAY' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:591.1-602.10.
Generating RTLIL representation for module `\O_DELAY'.
Replacing existing blackbox module `\O_SERDES' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:612.1-628.10.
Generating RTLIL representation for module `\O_SERDES'.
Replacing existing blackbox module `\O_SERDES_CLK' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:638.1-647.10.
Generating RTLIL representation for module `\O_SERDES_CLK'.
Replacing existing blackbox module `\PLL' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:657.1-672.10.
Generating RTLIL representation for module `\PLL'.
Replacing existing blackbox module `\SOC_FPGA_INTF_AHB_M' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:682.1-696.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_M'.
Replacing existing blackbox module `\SOC_FPGA_INTF_AHB_S' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:706.1-723.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_S'.
Replacing existing blackbox module `\SOC_FPGA_INTF_AXI_M0' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:733.1-772.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M0'.
Replacing existing blackbox module `\SOC_FPGA_INTF_AXI_M1' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:782.1-821.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M1'.
Replacing existing blackbox module `\SOC_FPGA_INTF_DMA' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:831.1-837.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_DMA'.
Replacing existing blackbox module `\SOC_FPGA_INTF_IRQ' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:847.1-853.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_IRQ'.
Replacing existing blackbox module `\SOC_FPGA_INTF_JTAG' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:863.1-871.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_JTAG'.
Replacing existing blackbox module `\SOC_FPGA_TEMPERATURE' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:881.1-889.10.
Generating RTLIL representation for module `\SOC_FPGA_TEMPERATURE'.
Replacing existing blackbox module `\TDP_RAM18KX2' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:899.1-952.10.
Generating RTLIL representation for module `\TDP_RAM18KX2'.
Replacing existing blackbox module `\TDP_RAM36K' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:962.1-991.10.
Generating RTLIL representation for module `\TDP_RAM36K'.
Replacing existing blackbox module `\LATCH' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1008.1-1013.10.
Generating RTLIL representation for module `\LATCH'.
Replacing existing blackbox module `\LATCHN' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1021.1-1026.10.
Generating RTLIL representation for module `\LATCHN'.
Replacing existing blackbox module `\LATCHR' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1035.1-1041.10.
Generating RTLIL representation for module `\LATCHR'.
Replacing existing blackbox module `\LATCHS' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1049.1-1055.10.
Generating RTLIL representation for module `\LATCHS'.
Replacing existing blackbox module `\LATCHNR' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1064.1-1070.10.
Generating RTLIL representation for module `\LATCHNR'.
Replacing existing blackbox module `\LATCHNS' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1079.1-1085.10.
Generating RTLIL representation for module `\LATCHNS'.
Replacing existing blackbox module `\RS_DSP' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1092.1-1117.10.
Generating RTLIL representation for module `\RS_DSP'.
Replacing existing blackbox module `\RS_DSP_MULT' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1123.1-1136.10.
Generating RTLIL representation for module `\RS_DSP_MULT'.
Replacing existing blackbox module `\RS_DSP_MULT_REGIN' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1141.1-1157.10.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN'.
Replacing existing blackbox module `\RS_DSP_MULT_REGOUT' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1162.1-1179.10.
Generating RTLIL representation for module `\RS_DSP_MULT_REGOUT'.
Replacing existing blackbox module `\RS_DSP_MULT_REGIN_REGOUT' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1185.1-1203.10.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN_REGOUT'.
Replacing existing blackbox module `\RS_DSP_MULTADD' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1209.1-1236.10.
Generating RTLIL representation for module `\RS_DSP_MULTADD'.
Replacing existing blackbox module `\RS_DSP_MULTADD_REGIN' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1241.1-1267.10.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN'.
Replacing existing blackbox module `\RS_DSP_MULTADD_REGOUT' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1272.1-1298.10.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGOUT'.
Replacing existing blackbox module `\RS_DSP_MULTADD_REGIN_REGOUT' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1303.1-1328.10.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN_REGOUT'.
Replacing existing blackbox module `\RS_DSP_MULTACC' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1333.1-1354.10.
Generating RTLIL representation for module `\RS_DSP_MULTACC'.
Replacing existing blackbox module `\RS_DSP_MULTACC_REGIN' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1359.1-1383.10.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN'.
Replacing existing blackbox module `\RS_DSP_MULTACC_REGOUT' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1388.1-1410.10.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGOUT'.
Replacing existing blackbox module `\RS_DSP_MULTACC_REGIN_REGOUT' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1415.1-1437.10.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN_REGOUT'.
Replacing existing blackbox module `\RS_TDP36K' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1444.1-1515.10.
Generating RTLIL representation for module `\RS_TDP36K'.
Replacing existing blackbox module `\BRAM2x18_TDP' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1521.1-1571.10.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Replacing existing blackbox module `\BRAM2x18_SDP' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1576.1-1610.10.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Replacing existing blackbox module `\_$_mem_v2_asymmetric' at /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1615.1-1661.12.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

4.325. Executing CLKBUFMAP pass (inserting clock buffers).
Inserting rs__CLK_BUF on primitive_example_design_1.clk[0].
Inserting rs__CLK_BUF on primitive_example_design_1.clk_buf_out[0].

4.326. Executing TECHMAP pass (map to technology primitives).

4.326.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/io_cell_final_map.v
Parsing Verilog input from `/nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/io_cell_final_map.v' to AST representation.
Generating RTLIL representation for module `\rs__CLK_BUF'.
Generating RTLIL representation for module `\rs__I_BUF'.
Generating RTLIL representation for module `\rs__O_BUF'.
Generating RTLIL representation for module `\rs__O_BUFT'.
Successfully finished Verilog frontend.

4.326.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~8 debug messages>

4.327. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Mapping port primitive_example_design_1.clk using rs__I_BUF.
Mapping port primitive_example_design_1.G using rs__I_BUF.
Mapping port primitive_example_design_1.P using rs__I_BUF.
Mapping port primitive_example_design_1.Q using rs__O_BUF.
Mapping port primitive_example_design_1.buft_out using rs__O_BUF.
Mapping port primitive_example_design_1.ibuf0_en using rs__I_BUF.
Mapping port primitive_example_design_1.ibuf10_en using rs__I_BUF.
Mapping port primitive_example_design_1.ibuf11_en using rs__I_BUF.
Mapping port primitive_example_design_1.ibuf12_en using rs__I_BUF.
Mapping port primitive_example_design_1.ibuf13_en using rs__I_BUF.
Mapping port primitive_example_design_1.ibuf14_en using rs__I_BUF.
Mapping port primitive_example_design_1.ibuf15_en using rs__I_BUF.
Mapping port primitive_example_design_1.ibuf16_en using rs__I_BUF.
Mapping port primitive_example_design_1.ibuf1_en using rs__I_BUF.
Mapping port primitive_example_design_1.ibuf2_en using rs__I_BUF.
Mapping port primitive_example_design_1.ibuf3_en using rs__I_BUF.
Mapping port primitive_example_design_1.ibuf4_en using rs__I_BUF.
Mapping port primitive_example_design_1.ibuf5_en using rs__I_BUF.
Mapping port primitive_example_design_1.ibuf6_en using rs__I_BUF.
Mapping port primitive_example_design_1.ibuf7_en using rs__I_BUF.
Mapping port primitive_example_design_1.ibuf8_en using rs__I_BUF.
Mapping port primitive_example_design_1.ibuf9_en using rs__I_BUF.
Mapping port primitive_example_design_1.in using rs__I_BUF.
Mapping port primitive_example_design_1.mux1_sel using rs__I_BUF.
Mapping port primitive_example_design_1.mux2_sel using rs__I_BUF.
Mapping port primitive_example_design_1.obuft_oe using rs__I_BUF.
Mapping port primitive_example_design_1.ram_addr using rs__I_BUF.
Mapping port primitive_example_design_1.ram_we using rs__I_BUF.
Mapping port primitive_example_design_1.rst using rs__I_BUF.

4.328. Executing TECHMAP pass (map to technology primitives).

4.328.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/io_cell_final_map.v
Parsing Verilog input from `/nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/io_cell_final_map.v' to AST representation.
Generating RTLIL representation for module `\rs__CLK_BUF'.
Generating RTLIL representation for module `\rs__I_BUF'.
Generating RTLIL representation for module `\rs__O_BUF'.
Generating RTLIL representation for module `\rs__O_BUFT'.
Successfully finished Verilog frontend.

4.328.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~42 debug messages>

4.329. Printing statistics.

=== primitive_example_design_1 ===

   Number of wires:                203
   Number of wire bits:            314
   Number of public wires:          48
   Number of public wire bits:      62
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 69
     $lut                            5
     CARRY_CHAIN                     1
     CLK_BUF                         2
     DFFNRE                          1
     DFFRE                           4
     I_BUF                          51
     O_BUF                           3
     O_BUFT                          1
     TDP_RAM18KX2                    1

4.330. Executing TECHMAP pass (map to technology primitives).

4.330.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/lut_map.v
Parsing Verilog input from `/nfs_scratch/scratch/eda/behzad/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis3/lut_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

4.330.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~73 debug messages>

4.331. Printing statistics.

=== primitive_example_design_1 ===

   Number of wires:                213
   Number of wire bits:            332
   Number of public wires:          48
   Number of public wire bits:      62
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 69
     CARRY_CHAIN                     1
     CLK_BUF                         2
     DFFNRE                          1
     DFFRE                           4
     I_BUF                          51
     LUT2                            2
     LUT3                            3
     O_BUF                           3
     O_BUFT                          1
     TDP_RAM18KX2                    1

   Number of LUTs:                   5
   Number of REGs:                   5
   Number of CARRY ADDERs:           0
Execute Function override
Run Script

5. Executing Verilog backend.
Dumping module `\primitive_example_design_1'.

6. Executing BLIF backend.

Warnings: 15 unique messages, 15 total
End of script. Logfile hash: bac0165ead, CPU: user 0.64s system 0.02s, MEM: 39.98 MB peak
Yosys 0.18+10 (git sha1 b6be8bb62, gcc 11.1.0-1ubuntu1~20.04 -fPIC -Os)
Time spent: 52% 6x abc (0 sec), 15% 39x read_verilog (0 sec), ...
