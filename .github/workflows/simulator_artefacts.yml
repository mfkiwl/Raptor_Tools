name: 'Snapshot Verilator & Iverilog Binaries'
on:
    push:    
    workflow_dispatch:
        inputs:
          Upload_as_Artefact:
            description: 'Should upload the binaries as GH artefacts'
            default: false
            type: boolean

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:    
    build_simulator:
        name:  build-${{ matrix.simulator }}
        runs-on: ubuntu-latest
        container:
          image: centos:7
        defaults:
          run:
            shell: bash
        strategy:
          matrix:
            simulator:
            - verilator
            - iverilog

        env:
          simulator: ${{ matrix.simulator }}

        steps:
        - name: Install Dependencies
          run: |
            yum update -y && yum group install -y 'Development Tools'
            yum install -y openssh-server openssh-clients
            yum-config-manager --enable rhel-server-rhscl-7-rpms
            yum install -y https://repo.ius.io/ius-release-el7.rpm
            yum install -y centos-release-scl
            yum install -y devtoolset-11
            yum install -y devtoolset-11-toolchain
            yum remove -y git*
            yum install -y https://packages.endpointdev.com/rhel/7/os/x86_64/endpoint-repo.x86_64.rpm
            yum install -y git wget
            yum install -y gperf python3
            yum install -y help2man tree

        - name: Checkout code
          uses: actions/checkout@v3

        - name: Install Dependencies
          run: |
            python3 -m pip install --upgrade pip
            python3 -m pip install docopt
            curl -C - -O https://cmake.org/files/v3.28/cmake-3.28.0-linux-x86_64.tar.gz
            tar xzf cmake-3.28.0-linux-x86_64.tar.gz
            ln -s $PWD/cmake-3.28.0-linux-x86_64/bin/cmake /usr/bin/cmake
            yum install -y bzip2-devel

        - name: make workspace safe & fetch HDL simulator
          run: |
                git config --global --add safe.directory $GITHUB_WORKSPACE
                df -h && du -sch *
                cd HDL_simulator
                make build

        - name: Clone ${{ matrix.simulator }} 
          run: |
                cd HDL_simulator
                case "${{ matrix.simulator }}" in
                    "verilator")
                        git clone https://github.com/verilator/verilator.git ${{ matrix.simulator }}
                ;;
                    "iverilog")
                        git clone https://github.com/steveicarus/iverilog.git ${{ matrix.simulator }}
                ;;
                    *)
                    echo "Invalid value: ${{ matrix.simulator }}"
                ;;
                esac
                mkdir /opt/${{ matrix.simulator }}

        - name: Build ${{ matrix.simulator }} 
          run: |
                cd HDL_simulator/${{ matrix.simulator }}             
                case "${{ matrix.simulator }}" in
                    "verilator")
                        source $GITHUB_WORKSPACE/HDL_simulator/build/bin/HDL_simulator/setup_sim
                        gcc --version
                        autoconf
                        export SYSTEMC_INCLUDE=$GITHUB_WORKSPACE/HDL_simulator/build/bin/HDL_simulator/systemc_2.3.3/include
                        export SYSTEMC_LIBDIR=$GITHUB_WORKSPACE/HDL_simulator/build/bin/HDL_simulator/systemc_2.3.3/lib-linux64
                        ./configure --prefix=/opt/${{ matrix.simulator }}
                        make -j`nproc`
                        make install
                        cd /opt/${{ matrix.simulator }}
                        tree
                        #ln -s share/verilator/include .
                        cd bin #&& ln -s ../share/verilator/bin/* .
                        ls -l
                        mv $GITHUB_WORKSPACE/HDL_simulator/build/bin/HDL_simulator/verilator /mnt
                        cp -rf /opt/${{ matrix.simulator }} $GITHUB_WORKSPACE/HDL_simulator/build/bin/HDL_simulator/
                        cd /opt && tar -cvzf ${{ matrix.simulator }}.tar.gz ${{ matrix.simulator }}
                ;;
                    "iverilog")
                        source /opt/rh/devtoolset-11/enable
                        sh autoconf.sh
                        ./configure --prefix=/opt/${{ matrix.simulator }}
                        make -j`nproc`
                        make install
                        sed -i '2i\# added by RS\nTOP_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )' /opt/${{ matrix.simulator }}/bin/iverilog-vpi
                        sed -i 's|/opt/iverilog|$TOP_DIR/..|g' /opt/${{ matrix.simulator }}/bin/iverilog-vpi
                        mv $GITHUB_WORKSPACE/HDL_simulator/build/bin/HDL_simulator/iverilog /mnt
                        cp -rf /opt/${{ matrix.simulator }} $GITHUB_WORKSPACE/HDL_simulator/build/bin/HDL_simulator/
                        cd /opt && tar -cvzf ${{ matrix.simulator }}.tar.gz ${{ matrix.simulator }}
                ;;
                    *)
                    echo "Invalid value: ${{ matrix.simulator }}"
                ;;
                esac

        - name: Run Test ${{ matrix.simulator }} in /tmp
          run: |
                cd /tmp
                git clone https://github.com/os-fpga/Validation.git
                cd Validation/RTL_testcases/iverilog_tests/adder_iverilog/rtl
                cp ../sim/co_sim_tb/co_sim_adder_iverilog.v .
                case "${{ matrix.simulator }}" in
                      "verilator")
                            source $GITHUB_WORKSPACE/HDL_simulator/build/bin/HDL_simulator/setup_sim
                            export VERILATOR_ROOT=$GITHUB_WORKSPACE/HDL_simulator/build/bin/HDL_simulator/verilator/share/verilator
                            export PATH=$VERILATOR_ROOT/bin:$PATH
                            verilator -V
                            verilator -Wno-fatal -Wno-BLKANDNBLK --timing --build --main --exe *.v
                            make -j -C obj_dir/ -f Vadder_iverilog.mk Vadder_iverilog
                            obj_dir/Vadder_iverilog
                  ;;
                      "iverilog")
                          source /opt/rh/devtoolset-11/enable
                          export PATH=$GITHUB_WORKSPACE/HDL_simulator/build/bin/HDL_simulator/iverilog/bin:$PATH
                          iverilog -V
                          ls -l
                          iverilog -g2012 *.v
                          vvp ./a.out
                  ;;
                      *)
                      echo "Invalid value: ${{ matrix.simulator }}"
                  ;;
                esac

        - name: Upload Binaries ${{ matrix.simulator }}
          if: ${{ matrix.simulator == 'iverilog' }}
          uses: actions/upload-artifact@v3
          with:
              name: iverilog
              path: /opt/${{ matrix.simulator }}.tar.gz  

        - name: Upload Binaries ${{ matrix.simulator }}
          if: ${{ matrix.simulator == 'verilator' }}
          uses: actions/upload-artifact@v3
          with:
            name: verilator
            path: /opt/${{ matrix.simulator }}.tar.gz                

            
    Test_simulator:
        name:  Test-${{ matrix.simulator }}
        needs: build_simulator
        runs-on: ubuntu-latest
        defaults:
          run:
            shell: bash
        strategy:
          fail-fast: false
          matrix:
            simulator:
            - verilator
            - iverilog

        env:
          simulator: ${{ matrix.simulator }}

        steps:
        - name: Install Dependencies
          run: |
            python3 -m pip install --upgrade pip
            python3 -m pip install docopt

        - name: Checkout code
          uses: actions/checkout@v4

        - name: fetch HDL simulator
          run: |
                cd HDL_simulator
                make build

        - name: Download Release
          if: ${{ matrix.simulator == 'iverilog' }}
          uses: actions/download-artifact@v3
          with:
              name: iverilog
      
        - name: Download Release
          if: ${{ matrix.simulator == 'verilator' }}
          uses: actions/download-artifact@v3
          with:
            name: verilator              

        - name: Extract ${{ matrix.simulator }}
          run: |
                tar -xvzf $GITHUB_WORKSPACE/${{ matrix.simulator }}.tar.gz

        - name: Run Test ${{ matrix.simulator }} in /tmp
          run: |
                cd /tmp
                git clone https://github.com/os-fpga/Validation.git
                cd Validation/RTL_testcases/iverilog_tests/adder_iverilog/rtl
                cp ../sim/co_sim_tb/co_sim_adder_iverilog.v .
                case "${{ matrix.simulator }}" in
                      "verilator")
                            export VERILATOR_ROOT=$GITHUB_WORKSPACE/verilator
                            export PATH=$GITHUB_WORKSPACE/verilator/bin:$PATH
                            verilator -V
                            verilator -Wno-fatal -Wno-BLKANDNBLK --timing --build --main --exe *.v
                            make -j -C obj_dir/ -f Vadder_iverilog.mk Vadder_iverilog
                            obj_dir/Vadder_iverilog
                  ;;
                      "iverilog")
                          export PATH=$GITHUB_WORKSPACE/iverilog/bin:$PATH
                          iverilog -V
                          iverilog -g2012 *.v
                          vvp ./a.out
                  ;;
                      *)
                      echo "Invalid value: ${{ matrix.simulator }}"
                  ;;
                esac

    upload_simulator:
        name:  Upload
        needs: Test_simulator
        runs-on: ubuntu-latest
        defaults:
          run:
            shell: bash
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
  
            - name: fetch HDL simulator
              run: |
                    cd HDL_simulator
                    make build
                
            - name: Download Verilator
              uses: actions/download-artifact@v3
              with:
                name: verilator              
    
            - name: Download Iverilog
              uses: actions/download-artifact@v3
              with:
                  name: iverilog  
                
            - name: Extract
              run: |
                    for file in $(ls -1 $GITHUB_WORKSPACE/*.tar.gz)
                    do
                    echo $file
                    tar -xvf $file
                    done

            - name: zip HDL_simulator 
              run: |
                    sudo mv $GITHUB_WORKSPACE/HDL_simulator/build/bin/HDL_simulator/verilator /mnt
                    sudo mv $GITHUB_WORKSPACE/HDL_simulator/build/bin/HDL_simulator/iverilog /mnt
                    cp -rf $GITHUB_WORKSPACE/verilator $GITHUB_WORKSPACE/HDL_simulator/build/bin/HDL_simulator/
                    cp -rf $GITHUB_WORKSPACE/iverilog $GITHUB_WORKSPACE/HDL_simulator/build/bin/HDL_simulator/
                    cd  $GITHUB_WORKSPACE/HDL_simulator/build/bin
                    today=`date +"%d%b_%Y"`
                    tar -cvzf hdl_simulator_$today.tar.gz  HDL_simulator
                    
            - name: Upload Release
              uses: softprops/action-gh-release@v1
              with:
                files: ${{ github.workspace }}/HDL_simulator/build/bin/*.tar.gz
                repository: os-fpga/post_build_artifacts
                token: ${{ secrets.upload_release }}
                tag_name: v0.2
